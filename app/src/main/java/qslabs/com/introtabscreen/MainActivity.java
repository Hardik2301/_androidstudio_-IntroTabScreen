package qslabs.com.introtabscreen;

import android.net.Uri;
import android.support.design.widget.TabLayout;
import android.support.v7.app.AppCompatActivity;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.os.Bundle;

public class MainActivity extends AppCompatActivity implements tab1.OnFragmentInteractionListener, tab2.OnFragmentInteractionListener, tab3.OnFragmentInteractionListener, tab4.OnFragmentInteractionListener, tab5.OnFragmentInteractionListener {

    /**
     * A PagerAdapter is used to generate and provide the pages
     * displayed by the ViewPager manager (see class initialization below).
     * PagerAdapter is used in cases where the number of
     * pages is fixed; each sibling page is stored in memory.
     * if the number of pages is variable, consider
     * implementing a FragmentStatePagerAdapter, which reduces memory cost.
     */

    private SectionsPagerAdapter mSectionsPagerAdapter;

    /**
     * a ViewPager is defined as a 'Layout manager that allows the user
     * to flip left and right through pages of data'
     * (https://developer.android.com/reference/android/support/v4/view/ViewPager.html).
     * This is the standard implementation for achieving swipe navigation between fragments.
     */

    private ViewPager mViewPager;
    private TabLayout navigation_tab;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());

        mViewPager = (ViewPager) findViewById(R.id.container);
        mViewPager.setAdapter(mSectionsPagerAdapter);

        /**
         * A PageTransformer allows for animations to be applied to page views;
         * The PageTransformer is invoked when the displayed page from the ViewPager
         * is scrolled.
         */

        mViewPager.setPageTransformer(false, new IntroPageTransformer());

        navigation_tab = findViewById(R.id.navigation_tab); // navigation_tab serves to provide a visualization of the tab layout
        navigation_tab.setupWithViewPager(mViewPager, true);
    }

    /**
     * Required method override in order to
     * implement OnFragmentInteractionListeners.
     */

    @Override
    public void onFragmentInteraction(Uri uri) {

    }

    /**
     * Using the auto-populated SectionsPagerAdapter initialization
     * generated by the 'Tabbed Activity' code-behind. Functions to return
     * a fragment corresponding to one of the tabs.
     */

    public class SectionsPagerAdapter extends FragmentPagerAdapter {

        public SectionsPagerAdapter(FragmentManager fm) {
            super(fm);
        }

        /**
         * getItem instantiates the respective fragment;
         * modify the cases to create the desired fragment order.
         */

        @Override
        public Fragment getItem(int position) {
            switch(position)
            {
                case 0:
                    return tab1.newInstance(position);
                case 1:
                    return tab2.newInstance(position);
                case 2:
                    return tab3.newInstance(position);
                case 3:
                    return tab4.newInstance(position);
                case 4:
                    return tab5.newInstance(position);
                default:
                    return tab1.newInstance(position);
            }
        }

        /**
         * Returns the total number of pages; ensure the count
         * matches the number of cases above.
         */

        @Override
        public int getCount() {
            return 5;
        }
    }
}
